{"ast":null,"code":"var _jsxFileName = \"/Users/vibhor/Documents/Event-Management-Application-Using-ReactJs-And-NextJs/components/Button/index.tsx\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from 'react';\nimport styled, { css } from 'styled-components';\nimport Flex from '../Flex';\n\nconst getButtonKind = (_ref) => {\n  let {\n    isLoading\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"isLoading\"]);\n\n  switch (props.kind) {\n    case 'primary':\n      return css`\n        background-color: ${props => props.theme.color.primaryColor100};\n        color: ${props => props.theme.color.light2};\n        border-radius: 4px;\n        box-shadow: ${props => props.theme.shadow.elevation03}\n          ${props => props.theme.color.primaryColor100};\n      `;\n\n    case 'secondary':\n      return css`\n        color: rgba(0, 0, 0, 0.3);\n        background-color: transparent;\n        font-size: 14px !important;\n        font-weight: 600;\n        border-radius: 4px;\n      `;\n  }\n};\n\nconst getSize = props => {\n  switch (props.size) {\n    case 'large':\n      return css`\n        padding: 12px 42px;\n      `;\n\n    case 'small':\n      return css`\n        padding: 10px 15px;\n      `;\n\n    default:\n      return ``;\n  }\n};\n\nconst ButtonStyled = styled.button`\n  box-sizing: border-box;\n  text-align: ${props => props.textAlign ? props.textAlign : `center`};\n  border: none;\n  outline: none;\n  transition-property: all;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in;\n  font-size: 16px;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  cursor: pointer;\n  line-height: 1.2;\n  background-color: transparent;\n \n  ${getButtonKind}\n  ${getSize}\n  margin: ${props => props.margin};\n  padding: ${props => props.padding};\n  border-radius: ${props => props.borderRadius};\n  width: ${props => props.width ? props.width : `100%`};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button = (_ref2) => {\n  let {\n    children,\n    disabled,\n    isLoading,\n    buttonIcon,\n    iconWidth,\n    iconMargin\n  } = _ref2,\n      props = _objectWithoutProperties(_ref2, [\"children\", \"disabled\", \"isLoading\", \"buttonIcon\", \"iconWidth\", \"iconMargin\"]);\n\n  return __jsx(ButtonStyled, _extends({}, props, {\n    disabled: isLoading ? true : disabled,\n    isLoading: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }\n  }), __jsx(Flex, {\n    justifyContent: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }, children));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/vibhor/Documents/Event-Management-Application-Using-ReactJs-And-NextJs/components/Button/index.tsx"],"names":["React","styled","css","Flex","getButtonKind","isLoading","props","kind","theme","color","primaryColor100","light2","shadow","elevation03","getSize","size","ButtonStyled","button","textAlign","margin","padding","borderRadius","width","Button","children","disabled","buttonIcon","iconWidth","iconMargin"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,IAAiBC,GAAjB,QAA4B,mBAA5B;AACA,OAAOC,IAAP,MAAiB,SAAjB;;AAwBA,MAAMC,aAAa,GAAG,UAAmD;AAAA,MAAlD;AAAEC,IAAAA;AAAF,GAAkD;AAAA,MAAlCC,KAAkC;;AACvE,UAAQA,KAAK,CAACC,IAAd;AACE,SAAK,SAAL;AACE,aAAOL,GAAI;4BACYI,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkBC,eAAgB;iBACvDJ,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkBE,MAAO;;sBAE9BL,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYI,MAAZ,CAAmBC,WAAY;YACnDP,KAAD,IAAWA,KAAK,CAACE,KAAN,CAAYC,KAAZ,CAAkBC,eAAgB;OALnD;;AAQF,SAAK,WAAL;AACE,aAAOR,GAAI;;;;;;OAAX;AAXJ;AAmBD,CApBD;;AAsBA,MAAMY,OAAO,GAAIR,KAAD,IAAiC;AAC/C,UAAQA,KAAK,CAACS,IAAd;AACE,SAAK,OAAL;AACE,aAAOb,GAAI;;OAAX;;AAGF,SAAK,OAAL;AACE,aAAOA,GAAI;;OAAX;;AAGF;AACE,aAAQ,EAAR;AAVJ;AAYD,CAbD;;AAeA,MAAMc,YAAY,GAAGf,MAAM,CAACgB,MAAoB;;gBAE/BX,KAAD,IAAYA,KAAK,CAACY,SAAN,GAAkBZ,KAAK,CAACY,SAAxB,GAAqC,QAAS;;;;;;;;;;;;;;;IAetEd,aAAc;IACdU,OAAQ;YACCR,KAAD,IAAWA,KAAK,CAACa,MAAO;aACtBb,KAAD,IAAWA,KAAK,CAACc,OAAQ;mBAClBd,KAAD,IAAWA,KAAK,CAACe,YAAa;WACrCf,KAAD,IAAYA,KAAK,CAACgB,KAAN,GAAchB,KAAK,CAACgB,KAApB,GAA6B,MAAO;;;;;CAtB3D;;AA6BA,MAAMC,MAA8B,GAAG,WAQpB;AAAA,MARqB;AACtCC,IAAAA,QADsC;AAEtCC,IAAAA,QAFsC;AAGtCpB,IAAAA,SAHsC;AAItCqB,IAAAA,UAJsC;AAKtCC,IAAAA,SALsC;AAMtCC,IAAAA;AANsC,GAQrB;AAAA,MADdtB,KACc;;AACjB,SACE,MAAC,YAAD,eACMA,KADN;AAEE,IAAA,QAAQ,EAAED,SAAS,GAAG,IAAH,GAAUoB,QAF/B;AAGE,IAAA,SAAS,EAAEpB,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKE,MAAC,IAAD;AAAM,IAAA,cAAc,EAAC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BmB,QAA/B,CALF,CADF;AASD,CAlBD;;AAoBA,eAAeD,MAAf","sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport Flex from '../Flex';\n\ninterface ButtonProps {\n  kind: 'primary' | 'secondary';\n  size?: 'large' | 'small';\n  onClick?: any;\n  children?: React.ReactNode;\n  disabled?: boolean;\n  type?: 'button' | 'submit';\n  margin?: string;\n  isLoading?: boolean;\n  padding?: string;\n  blur?: boolean;\n  iconFill?: string;\n  buttonIcon?: any;\n  iconWidth?: number;\n  iconHeight?: number;\n  iconBgOnHover?: string;\n  iconMargin?: string;\n  borderRadius?: string;\n  width?: string;\n  textAlign?: string;\n}\n\nconst getButtonKind = ({ isLoading, ...props }: Partial<ButtonProps>) => {\n  switch (props.kind) {\n    case 'primary':\n      return css`\n        background-color: ${(props) => props.theme.color.primaryColor100};\n        color: ${(props) => props.theme.color.light2};\n        border-radius: 4px;\n        box-shadow: ${(props) => props.theme.shadow.elevation03}\n          ${(props) => props.theme.color.primaryColor100};\n      `;\n\n    case 'secondary':\n      return css`\n        color: rgba(0, 0, 0, 0.3);\n        background-color: transparent;\n        font-size: 14px !important;\n        font-weight: 600;\n        border-radius: 4px;\n      `;\n  }\n};\n\nconst getSize = (props: Partial<ButtonProps>) => {\n  switch (props.size) {\n    case 'large':\n      return css`\n        padding: 12px 42px;\n      `;\n    case 'small':\n      return css`\n        padding: 10px 15px;\n      `;\n    default:\n      return ``;\n  }\n};\n\nconst ButtonStyled = styled.button<ButtonProps>`\n  box-sizing: border-box;\n  text-align: ${(props) => (props.textAlign ? props.textAlign : `center`)};\n  border: none;\n  outline: none;\n  transition-property: all;\n  transition-duration: 0.2s;\n  transition-timing-function: ease-in;\n  font-size: 16px;\n  font-style: normal;\n  font-stretch: normal;\n  line-height: normal;\n  letter-spacing: normal;\n  cursor: pointer;\n  line-height: 1.2;\n  background-color: transparent;\n \n  ${getButtonKind}\n  ${getSize}\n  margin: ${(props) => props.margin};\n  padding: ${(props) => props.padding};\n  border-radius: ${(props) => props.borderRadius};\n  width: ${(props) => (props.width ? props.width : `100%`)};\n\n  &:focus {\n    outline: none;\n  }\n`;\n\nconst Button: React.SFC<ButtonProps> = ({\n  children,\n  disabled,\n  isLoading,\n  buttonIcon,\n  iconWidth,\n  iconMargin,\n  ...props\n}: ButtonProps) => {\n  return (\n    <ButtonStyled\n      {...props}\n      disabled={isLoading ? true : disabled}\n      isLoading={isLoading}\n    >\n      <Flex justifyContent=\"center\">{children}</Flex>\n    </ButtonStyled>\n  );\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}